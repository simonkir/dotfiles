#!/usr/bin/env bash

function run {
  if ! pgrep $1 ;
  then
    $@&
  fi
}

#herbstluftwm start
hc() {
    herbstclient "$@"
}

# KEYBINDINGS

# remove all existing keybindings
hc keyunbind --all

# if you have a super key you will be much happier with Mod set to Mod4
Mod=Mod4   # Use the super key as the main modifier

# hc keybind $Mod-Shift-x quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close
# hc keybind $Mod-q close

#Most of the keybindings have been set in sxhkd config file
#you can set them also here

#reload sxhkd - see keybind in sxhkd
#hc keybind $Mod-Shift-s  pkill -USR1 -x sxhkd

# MOVEMENTS

# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients to ... on single Monitor
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# moving clients to ... on dual monitor
# hc keybind $Mod-Shift-h chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
# hc keybind $Mod-Shift-Left chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
# hc keybind $Mod-Shift-j chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
# hc keybind $Mod-Shift-Down chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
# hc keybind $Mod-Shift-k chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
# hc keybind $Mod-Shift-Up chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
# hc keybind $Mod-Shift-l chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
# hc keybind $Mod-Shift-Right chain , lock , shift_to_monitor -r , focus_monitor -r , unlock

# FRAMES

# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode
# remove frame
hc keybind $Mod-r remove

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# layouting
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus on ...
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         use_index +1 --skip-visible
hc keybind $Mod-Shift-Tab   use_index -1 --skip-visible
hc keybind Control-Mod1-Left    focus left
hc keybind Control-Mod1-Up      focus up
hc keybind Control-Mod1-Right   focus right
hc keybind Control-Mod1-Down    focus down
hc keybind Mod1-Tab         use_index +1 --skip-visible
hc keybind Mod1-Shift-Tab   use_index -1 --skip-visible
#hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

#names to display in menu
tag_names=( {1..8} )

#keys to press to get to the tags
tag_keys=( {1..8} )

hc rename default "${tag_names[0]}" || true

for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    # horizontal tiling as standard
    hc set_layout horizontal
    hc set default_frame_layout 1
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" chain , move_index "$i" , use_index "$i"
    fi
done
